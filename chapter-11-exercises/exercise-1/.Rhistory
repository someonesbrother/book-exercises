install.packages(c("devtools", "fueleconomy"))
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View("vehicle")
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(data(fueleconomy))
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(data(vehicle))
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Install devtools package: allows installations from GitHub
install.packages("devtools")
install.packages("devtools")
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- vehicles[vehicles$make, ]
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- vehicles[vehicles$make, ]
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- vehicles[vehicles$make, ]
manufacturers <- vehicles[vehicles$make, ]
View(manufacturers)
View(manufacturers)
View(manufacturers)
View(manufacturers)
manufacturers <- vehicles$make
manufacturers <- vehicles[vehicles$make, ]
manufacturers <- vehicles[ , "make"]
unique(manufacturers)
manufacturers <- vehicles$make
makes <- vehicles$make
makes <- vehicles$make
unique(makes)
length(unique(makes))
vehicles[vehicles$year == 1997, ]
vehicles_1997 <- vehicles[vehicles$year == 1997, ]
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty) / 2
View(vehicles_1997)
View(vehicles_1997)
vehicles_2wd <- vehicles[vehicles$drive == "2-Wheel Drive",]
efficient_2wd <- vehicles_2wd[vehicles_2wd$cty  > 20, ]
print(efficient_2wd)
vehicles_2wd[vehicles_2wd$hwy == min(vehicles_2wd$hwy), "id"]
vehicles_2wd[vehicles_2wd$hwy == min(vehicles_2wd$hwy),]
vehicles_2wd[vehicles_2wd$hwy == min(vehicles_2wd$hwy), "id"]
library("dplyr")
# Install and load the "dplyr" library
library("dplyr")
# Install and load the "dplyr" library
library("dplyr")
library("dplyr")
# Install and load the "fueleconomy" package
#install.packages("devtools")
#devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
makes <- select(vehicles, make)
View(makes)
isVector(makes)
is.Vector(makes)
type(makes)
distinct(makes)
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
install.packages("nycflights13")
library("nycflights13")
library("dplyr")
??flights
flights <- mutate(flights, delayed_in_air = arr_delay - dep_delay)
arrange(flights, delayed_in_air)
arrange(flights, -delayed_in_air)
# On average, did flights gain or lose time?
# Note: use the `na.rm = TRUE` argument to remove NA values from your aggregation
summarize(flights, avg = mean(delayed_in_air), na.rm = T)
# On average, did flights gain or lose time?
# Note: use the `na.rm = TRUE` argument to remove NA values from your aggregation
summarize(flights, avg = mean(delayed_in_air, na.rm = T))
to_sea <- filter(flights, dest == "SEA")
to_sea <- select(flights, origin, dest, delay_in_air)
to_sea <- select(flights, origin, dest, delayed_in_air)
View(to_sea)
View(to_sea)
summarize(to_sea, avg_delayed = mean(delayed_in_Air, na.rm - T))
summarize(to_sea, avg_delayed = mean(delayed_in_air, na.rm - T))
summarize(to_sea, avg_delayed = mean(delayed_in_air, na.rm = T))
to_sea <- select(flights, origin, dest, delayed_in_air)
summarize(to_sea, avg_delayed = mean(delayed_in_air, na.rm = T))
to_sea <- filter(flights, dest == "SEA")
to_sea <- select(to_sea, origin, dest, delayed_in_air)
summarize(to_sea, avg_delayed = mean(delayed_in_air, na.rm = T))
