geom_line()
population_mortality <- wb(country = "USA", indicator = c("SH.STA.MMRT", "SP.POP.GROW", "SH.DYN.MORT"), mrv = 20, return_wide = T) %>%
select(date, SH.STA.MMRT, SP.POP.GROW, SH.DYN.MORT) %>%
gather(key = population, value = "value", -date)
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line()
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point()
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line()
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line(palette = "Dark2")
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line(palette = "Dark2") +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_discrete(name = "", labels = c("Children under 5 mortalites", "Materal Mortalities", "Population Growth (in %)"))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_discrete(palette = "Dark", name = "", labels = c("Children under 5 mortalites", "Materal Mortalities", "Population Growth (in %)"))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_discrete(name = "", labels = c("Children under 5 mortalites", "Materal Mortalities", "Population Growth (in %)"))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_discrete(name = "", labels = c("Children under 5 mortalites", "Materal Mortalities", "Population Growth (in %)")) +
scale_color_brewer(palette = "Dark")
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_discrete(name = "", labels = c("Children under 5 mortalites", "Materal Mortalities", "Population Growth (in %)")) +
scale_color_brewer(palette = "Dark2")
theme(axis.text.x = element_text(size = 5, angle = 90)
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_discrete(name = "", labels = c("Children under 5 mortalites", "Materal Mortalities", "Population Growth (in %)")) +
scale_color_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(size = 5, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_discrete(name = "", labels = c("Children under 5 mortalites", "Materal Mortalities", "Population Growth (in %)")) +
scale_color_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(size = 5, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_discrete(name = "", labels = c("Children under 5 mortalites", "Materal Mortalities", "Population Growth (in %)")) +
scale_color_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Materal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line(group = 1) +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line(group = 2) +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_line(group = 0) +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_path() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_step() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_point() +
geom_step() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 1)) +
geom_point() +
geom_step() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 1)) +
geom_point() +
geom_path() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "# Of Mortalites", y = "Dates") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 1)) +
geom_point() +
geom_path() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
View(population_mortality)
population_mortality <- wb(country = "USA", indicator = c("SH.STA.MMRT", "SP.POP.GROW", "SH.DYN.MORT"), mrv = 20, return_wide = T) %>%
select(date, SH.STA.MMRT, SP.POP.GROW, SH.DYN.MORT) %>%
gather(key = population, value = "value", -date) %>%
filter(!is.na(value))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 1)) +
geom_point() +
geom_path() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 1)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 1)) +
geom_point() +
geom_path() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
View(population_mortality)
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 1)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 3)) +
geom_point() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 3)) +
geom_polygon() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 3)) +
geom_hex() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 3)) +
geom_hexbin() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 3)) +
geom_contour() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population, group = 3)) +
geom_density() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_dotplot() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_dotplot(binwidth = 10) +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_line() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_line(group = 0) +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_line(group = 1) +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_path(group = 1) +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_area) +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_area()) +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_area() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_quantile() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_rug() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
population_plot <- ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_rug() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
source(analysis.R)
source("analysis.R")
top_10_co2_plot
hist(top_10_co2_plot)
hist(top_10_cO2_plot)
top_10_c02_plot
top_10_c02_plot
us_wealth_plot
health_costs_plot
world_forest_plot
population_plot
library(ggplot2)
library(wbstats)
library(dplyr)
library(tidyr)
library(maps)
options(scipen = 999)
print(nrow(wbindicators()))
# The ID is EN.ATM.CO2E.KT
top_10_co2_countries <- wb(country = "countries_only", indicator = c("EN.ATM.CO2E.KT"), mrv = 1) %>%
arrange(-value) %>%
slice(1:10)
top_10_c02_plot <-
ggplot(data = top_10_co2_countries) +
geom_col(mapping = aes(x = reorder(top_10_co2_countries$iso3c, top_10_co2_countries$value), y = value)) +
labs(title = "Top 10 Countries by CO2 Emissions", x = "Country (iso3)", y = top_10_co2_countries$indicator)
us_income_years <- wb(country = "USA", indicator = c("SI.DST.10TH.10", "SI.DST.04TH.20", "SI.DST.FRST.20"), mrv = 20, return_wide = T) %>%
mutate(wealth_top_10 = SI.DST.10TH.10, wealth_bottom_40 = SI.DST.04TH.20 + SI.DST.FRST.20, date = as.numeric(date)) %>%
select(date, wealth_top_10, wealth_bottom_40) %>%
gather(key = "percent", value = "value", -date)
us_wealth_plot <- ggplot(data = us_income_years, mapping = aes(x = date, y = value, color = percent)) +
geom_point() +
geom_line() +
labs(title = "US Wealth Equality Over Time", x = "Year", y = "Percentage of income held") +
scale_color_discrete(name = "Group", labels = c("Bottom 40% of Pop.", "Top 10% of Pop."))
iso3codes <- wbcountries() %>%
filter(incomeID == "HIC") %>%
pull(iso3c)
updated_cache <- wbcache()
health_costs <- wb(country = iso3codes, indicator = c("SH.XPD.CHEX.PC.CD", "SH.XPD.GHED.PC.CD", "SH.XPD.PVTD.PC.CD", "SH.XPD.OOPC.PC.CD"), mrv = 1,
return_wide = T, cache = updated_cache) %>%
rename("Total Spending" = SH.XPD.CHEX.PC.CD, "Government Spending" = SH.XPD.GHED.PC.CD, "Private Spending" = SH.XPD.PVTD.PC.CD, "Out of Pocket Costs" = SH.XPD.OOPC.PC.CD) %>%
select(iso3c, "Total Spending", "Government Spending", "Private Spending", "Out of Pocket Costs") %>%
gather(key = "Type", value = "spendings", -iso3c)
total_health_costs <- health_costs %>%
filter(Type == "Total Spending")
health_costs_plot <- ggplot(data = health_costs, mapping = aes(x = reorder(health_costs$iso3c, health_costs$spendings), y = spendings, color = Type)) +
geom_linerange(data = total_health_costs, mapping = aes(x = reorder(total_health_costs$iso3c, total_health_costs$spendings), ymin = 0, ymax = spendings)) +
geom_point(aes(shape = Type)) +
scale_color_brewer(palette = "Dark2") +
theme(axis.text.x = element_text(size = 5, angle = 90), legend.position = c(.2,.8)) +
labs(title = "Health Care Expenditures (per capita)", x = "Country", y = "Current US$")
forest_area <- wb(country = "countries_only", indicator = "AG.LND.FRST.ZS", mrv = 20) %>%
spread(key = date, value = "value")
forest_area <- forest_area %>%
mutate(forest_change = forest_area[,"2016"] - forest_area[,"1997"])
forest_area <- forest_area %>%
mutate(change_labels = cut(forest_area$forest_change, breaks = c(-Inf, 10, 5, 0 ,-5, -10, -20, Inf))) %>%
select(iso3c, country, forest_change, change_labels)
world_map_data <- map_data("world") %>%
mutate(iso3c = iso.alpha(map_data("world")$region, n = 3))
joined_data <- left_join(forest_area, world_map_data, by = "iso3c")
world_forest_plot <- ggplot(data = joined_data) +
geom_polygon(mapping = aes(x = long, y = lat, group = group, fill = change_labels)) +
scale_fill_brewer(palette = "RdYlGn", name = "Change", labels = c("< -20%",  "-20% to -10%", "-10% to -5%", "-5% to 0%", "0% to 5%", "5% to 10%", "> 10%", "NA")) +
labs(title = "Change in Forested Area 1997-2016") +
coord_quickmap() +
theme_void()
population_mortality <- wb(country = "USA", indicator = c("SH.STA.MMRT", "SP.POP.GROW", "SH.DYN.MORT"), mrv = 20, return_wide = T) %>%
select(date, SH.STA.MMRT, SP.POP.GROW, SH.DYN.MORT) %>%
gather(key = population, value = "value", -date) %>%
filter(!is.na(value))
population_plot <- ggplot(data = population_mortality, mapping = aes(x = date, y = value, color = population)) +
geom_jitter() +
geom_rug() +
labs(title = "Population Growth vs Mortality rates of women and children in the US", x = "Dates", y = "# Of Mortalites") +
scale_color_brewer(palette = "Dark2", name = "", labels = c("Children under 5 mortalites", "Maternal Mortalities", "Population Growth (in %)")) +
theme(axis.text.x = element_text(size = 10, angle = 90))
install.packages("shiny")
library("shiny")
ui <- fluidPage(
h1("Wack af"),
textInput(inpudId = "user_name")
)
ui <- fluidPage(
h1("Wack af"),
textInput(inpudId = "user_name", label = "What is your nam")
)
}
my_server <- function(input_list, output_list) {
}
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage(
h1("Wack af"),
textInput(inputId = "user_name", label = "What is your nam")
)
my_ui <- fluidPage(
h1("Wack af"),
textInput(inputId = "user_name", label = "What is your nam")
)
library("shiny")
my_ui <- fluidPage(
h1("Wack af"),
textInput(inputId = "user_name", label = "What is your nam")
)
my_server <- function(input_list, output_list) {
}
shinyApp(ui = my_ui, server = my_server)
shinyApp(ui = my_ui, server = my_server)
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input_list, output_list) {
renderText({
greeting <- paste("Hello", input_list$user_name)
return(greeting)
})
}
shinyApp(ui = my_ui, server = my_server)
my_server <- function(input_list, output_list) {
output_list$message <- renderText({
greeting <- paste("Hello", input_list$user_name)
return(greeting)
})
}
my_ui <- fluidPage(
h1("Wack af"),
textInput(inputId = "user_name", label = "What is your nam")
)
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage(
h1("Wack af"),
textInput(inputId = "user_name", label = "What is your nam")
textOutput(outputId = "message")
)
my_server <- function(input_list, output_list) {
output_list$message <- renderText({
greeting <- paste("Hello", input_list$user_name)
return(greeting)
})
}
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage(
h1("Wack af"),
textInput(inputId = "user_name", label = "What is your nam")
textOutput(outputId = "message")
)
library("shiny")
my_ui <- fluidPage(
h1("Wack af"),
textInput(inputId = "user_name", label = "What is your nam")
textOutput(outputId = "message")
)
my_server <- function(input_list, output_list) {
output_list$message <- renderText({
greeting <- paste("Hello", input_list$user_name)
return(greeting)
})
}
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage(
h1("Wack af"),
textInput(inputId = "user_name", label = "What is your nam")
textOutput(outputId = "message")
)
my_server <- function(input_list, output_list) {
output_list$message <- renderText({
greeting <- paste("Hello", input_list$user_name)
return(greeting)
})
}
shinyApp(ui = my_ui, server = my_server)
my_ui <- fluidPage(
h1("Wack af"),
textInput(inputId = "user_name", label = "What is your nam")
textOutput(outputId = "message")
)
my_ui <- fluidPage(
h1("Wack af"),
textInput(inputId = "user_name", label = "What is your nam"),
textOutput(outputId = "message")
)
my_server <- function(input_list, output_list) {
output_list$message <- renderText({
greeting <- paste("Hello", input_list$user_name)
return(greeting)
})
}
shinyApp(ui = my_ui, server = my_server)
# Load the `shiny` package
library(shiny)
ui<- fluidPage(
titlePanel("Cost Calculator"),
numericInput(inputId = "Price (in dollars)", min = 0, value = 0),
numericInput(inputId = "Quantity", value = 1, min = 1),
strong("COST")
)
ui<- fluidPage(
titlePanel("Cost Calculator"),
numericInput(label = "Price (in dollars)", min = 0, value = 0),
numericInput(label = "Quantity", value = 1, min = 1),
strong("COST")
)
# Exercise 2: a basic Shiny app
# Load the `shiny` package
library(shiny)
# Define a new `ui` variable. This variable should be assigned a `fluidPage()` layout
# The `fluidPage()` layout should be passed the following:
ui<- fluidPage(
titlePanel("Cost Calculator"),
# A `titlePanel()` layout with the text "Cost Calculator"
# A `numericInput()` widget with the label "Price (in dollars)"
# It should have a default value of 0 and a minimum value of 0
# Hint: look up the function's arguments in the documentation!
numericInput(inputId = "price", label = "Price (in dollars)", min = 0, value = 0),
# A second `numericInput()` widget with the label "Quantity"
# It should have a default value of 1 and a minimum value of 1
numericInput(inputId = "quantity", label = "Quantity", min = 1, value = 1),
# The word "Cost", strongly bolded
p(strong("Cost")),
# A `textOutput()` output of a calculated value labeled `cost`
textOutput(outputId = "cost")
)
# Define a `server` function (with appropriate arguments)
# This function should perform the following:
server <- function(input_list, output_list) {
# Assign a reactive `renderText()` function to the output's `cost` value
# The reactive expression should return the input `price` times the `quantity`
# So it looks nice, paste a "$" in front of it!
output_list$cost <- renderText({
total <- input_list$price * input_list$quantity
return(paste0("$", total))
})
}
# Create a new `shinyApp()` using the above ui and server
runApp('C:/Users/someo/Desktop/book-exercises/chapter-19-exercises/exercise-2')
# Create a new `shinyApp()` using the above ui and server
shinyApp(ui = ui, server = server)
setwd("C:/Users/someo/Desktop/book-exercises/chapter-19-exercises/exercise-4")
# Create a new `shinyApp()` using the loaded `ui` and `server` variables
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/someo/Desktop/book-exercises/chapter-19-exercises/exercise-4")
